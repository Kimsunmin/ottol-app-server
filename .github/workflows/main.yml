name: OTTOL-SERVER-CICD

env:
  REGISTRY: ottol.io
  DOCKER_IMAGE: ${{ github.repository }}
  DOCKER_CONTAINER: ottol_server

on:
  push:
    branches: ["main"]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Source Code
        uses: actions/checkout@v3
      - name: Setup node.js 18.16.0
        uses: actions/setup-node@v3 
        with: 
          node-version: 18.16.0
          cache: 'npm'
      - run: npm install

bulid:
    needs: test
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Source Code
      uses: actions/checkout@v3
    - name: Set up docker build
      id: buildx
      uses: docker/setup-buildx-action@v2
    - name: Login to ksm
      uses: docker/login-action@v2 
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.TEST_TOKEN }}
    - name: Build and Push
      id: docker_build
      uses: docker/build-push-action@v3
      with:
        push: true
        tags: ${{ env.REGISTRY }}/${{ env.DOCKER_IMAGE }}:latest

deploy:
  needs: build
  runs-on: self-hosted

  steps:
  - name: Login to ksm
    uses: docker/login-action@v2 
    with:
      registry: ksm.io
      username: ${{ github.actor }}
      password: ${{ secrets.TEST_TOKEN }}
  - name: Run docker
    run: |
        docker stop ${{ env.DOCKER_CONTAINER }} && docker rm ${{ env.DOCKER_CONTAINER }} && docker rmi ${{ env.REGISTRY }}/${{ env.DOCKER_IMAGE }}:latest 
        docker run -d -p 3000:3000 --name ${{ env.DOCKER_CONTAINER }} --restart always ${{ env.REGISTRY }}/${{ env.DOCKER_IMAGE }}:latest
